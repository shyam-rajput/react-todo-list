{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Form in React:\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [newName, updateName] = useState();\n  const [fullName, setFullName] = useState();\n  const inputName = event => {\n    //  jab ye function triger ho raha hota hai to ye object bhi pass karte hai isme jo event perform hua hai uski sabhi information hoti hai.\n\n    updateName(event.target.value); // \"event.target.value\" isse ham, user jo bhi type karega input field me usko  print karba sakege. Ab jaise he input filed me user jo bhi text type karenge bho newName ke liye current value ho jaayegi.\n  };\n\n  const onSubmit = () => {\n    setFullName(newName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", fullName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Name\",\n        onChange: inputName,\n        value: newName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"Click Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"r9EY8vCh5GIkG7V/FzTHN4lSMnw=\");\n_c = App;\nexport default App;\n\n// Flow of above code:\n\n// 'event.target.value' se ham user jo bhi type kar rahe hai input field me usko get kar rehe hai, ab ye 'event.target.value' ko hamne updateName() me pass kiya hai jisse newName variable ke pass jo use type karega bho text store ho jaayega newName variable ki cueent value bankar, uske baad ham is newName variable ko pass kar rahe hai input filed ke ander value property me jisse hame pata chal jaayega ki user kya text type kar raha hai. Ab hamne ek or state banakar user jo bhi type karega usko button click par H1 me show kara diya hai.\n\n// (Important) Jab ham Rect me Input Field likte hai to Value property ko ye input filed controlled nahi karta jaisa ke HTML me hota tha, yaha par React component is Value ko controlled kar raha hai and bho React Component Janna chahta hai ki is Value me kya pass ho raha hai taaki me usko duri jagah bhi use kara saku. And that is your controlled component jaha par is Input element ke power nahi hai balki React Component ke pass power hai, agar is Input element ke pass power hoti jaisa ki ham normal HTML me kar rahe hote the tab ye uncntrolled hota.\n\n// Agar ham input filed ke ander Value property ka use na bhi kare tab bhi ham ise achve kar paayenge, Value ke ander jo bhi user pass karega usko hamne pass kara diya hai or ab yeh Value is Single source of truth\" hai. Bas Single source of truth\" ke liye he Value ka hamne use kiya hai.\n\n// Hamne yaha two useState() isliye use kiye hai jisse ham H1 me tabhi show karaye jab user name input field me fill karke button par click kare tabhi name show ho,  agar ham newName varible ko H1 me add ka dete to isse user jo type kar raha hota bho usi time usko dikaayi deta rehta jo ham nahi chahte the kyuki newName varible me current text tha jo bhi user type kar raha tha input field.\n\n// Jab bhi ham input field me kuch type karte hai to onChange event trigger hota hai, isliye hamne onchange ke under onChange event lagaya hai. Ab jab jab user kuch type karega tab 'inputName' wala function call hoga.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","newName","updateName","fullName","setFullName","inputName","event","target","value","onSubmit"],"sources":["E:/reactjs/shyamapp/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Form in React:\r\n\r\nconst App = () => {\r\n  const [newName, updateName] = useState();\r\n\r\n  const [fullName, setFullName] = useState();\r\n\r\n  const inputName = (event) => {\r\n    //  jab ye function triger ho raha hota hai to ye object bhi pass karte hai isme jo event perform hua hai uski sabhi information hoti hai.\r\n\r\n    updateName(event.target.value); // \"event.target.value\" isse ham, user jo bhi type karega input field me usko  print karba sakege. Ab jaise he input filed me user jo bhi text type karenge bho newName ke liye current value ho jaayegi.\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setFullName(newName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Hello {fullName}</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={inputName}\r\n          value={newName}\r\n        ></input>\r\n        <button onClick={onSubmit}>Click Me</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// Flow of above code:\r\n\r\n// 'event.target.value' se ham user jo bhi type kar rahe hai input field me usko get kar rehe hai, ab ye 'event.target.value' ko hamne updateName() me pass kiya hai jisse newName variable ke pass jo use type karega bho text store ho jaayega newName variable ki cueent value bankar, uske baad ham is newName variable ko pass kar rahe hai input filed ke ander value property me jisse hame pata chal jaayega ki user kya text type kar raha hai. Ab hamne ek or state banakar user jo bhi type karega usko button click par H1 me show kara diya hai.\r\n\r\n// (Important) Jab ham Rect me Input Field likte hai to Value property ko ye input filed controlled nahi karta jaisa ke HTML me hota tha, yaha par React component is Value ko controlled kar raha hai and bho React Component Janna chahta hai ki is Value me kya pass ho raha hai taaki me usko duri jagah bhi use kara saku. And that is your controlled component jaha par is Input element ke power nahi hai balki React Component ke pass power hai, agar is Input element ke pass power hoti jaisa ki ham normal HTML me kar rahe hote the tab ye uncntrolled hota.\r\n\r\n// Agar ham input filed ke ander Value property ka use na bhi kare tab bhi ham ise achve kar paayenge, Value ke ander jo bhi user pass karega usko hamne pass kara diya hai or ab yeh Value is Single source of truth\" hai. Bas Single source of truth\" ke liye he Value ka hamne use kiya hai.\r\n\r\n// Hamne yaha two useState() isliye use kiye hai jisse ham H1 me tabhi show karaye jab user name input field me fill karke button par click kare tabhi name show ho,  agar ham newName varible ko H1 me add ka dete to isse user jo type kar raha hota bho usi time usko dikaayi deta rehta jo ham nahi chahte the kyuki newName varible me current text tha jo bhi user type kar raha tha input field.\r\n\r\n// Jab bhi ham input field me kuch type karte hai to onChange event trigger hota hai, isliye hamne onchange ke under onChange event lagaya hai. Ab jab jab user kuch type karega tab 'inputName' wala function call hoga.\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,EAAE;EAExC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,EAAE;EAE1C,MAAMM,SAAS,GAAIC,KAAK,IAAK;IAC3B;;IAEAJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED,MAAMC,QAAQ,GAAG,MAAM;IACrBL,WAAW,CAACH,OAAO,CAAC;EACtB,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,WAAI,QAAM,EAACE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACzB;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,iBAAiB;QAC7B,QAAQ,EAAEE,SAAU;QACpB,KAAK,EAAEJ;MAAQ;QAAA;QAAA;QAAA;MAAA,QACR,eACT;QAAQ,OAAO,EAAEQ,QAAS;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACxC,iBACL;AAEP,CAAC;AAAC,GA7BIT,GAAG;AAAA,KAAHA,GAAG;AA+BT,eAAeA,GAAG;;AAElB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}