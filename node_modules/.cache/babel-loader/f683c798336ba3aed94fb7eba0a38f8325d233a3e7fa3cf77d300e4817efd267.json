{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = _ref => {\n  _s();\n  let {} = _ref;\n  const fname = useParams();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello \", fname, \" Right\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_s(User, \"TEaAzNOCtPJixWVvwcjpFdm6D4U=\", false, function () {\n  return [useParams];\n});\n_c = User;\nexport default User;\n\n// 'userParems' returns an object of key/value pairs of URL parameters. Use it to access match.params of the current <Route>.\n\n// http://localhost:3000/user , agar is url me user ke baad hame kuch name add karna hai or us name ko user page par show karana hai dynamically tab is situition me ham useParams Hook ka use karte hai.\n\n// First we need to import userParams hook\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useParams","User","fname"],"sources":["E:/reactjs/shyamapp/src/User.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst User = ({}) => {\r\n  const fname = useParams();\r\n  return <h1>Hello {fname} Right</h1>;\r\n};\r\n\r\nexport default User;\r\n\r\n// 'userParems' returns an object of key/value pairs of URL parameters. Use it to access match.params of the current <Route>.\r\n\r\n// http://localhost:3000/user , agar is url me user ke baad hame kuch name add karna hai or us name ko user page par show karana hai dynamically tab is situition me ham useParams Hook ka use karte hai.\r\n\r\n// First we need to import userParams hook\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,IAAI,GAAG,QAAQ;EAAA;EAAA,IAAP,CAAC,CAAC;EACd,MAAMC,KAAK,GAAGF,SAAS,EAAE;EACzB,oBAAO;IAAA,WAAI,QAAM,EAACE,KAAK,EAAC,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AACrC,CAAC;AAAC,GAHID,IAAI;EAAA,QACMD,SAAS;AAAA;AAAA,KADnBC,IAAI;AAKV,eAAeA,IAAI;;AAEnB;;AAEA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}