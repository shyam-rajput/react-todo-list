{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\Slotm.jsx\";\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slotm(ppp) {\n  let {\n    x,\n    y,\n    z\n  } = ppp;\n  console.log(x, y, x);\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Matchine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Not Matchine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n_c = Slotm;\nexport default Slotm;\nvar _c;\n$RefreshReg$(_c, \"Slotm\");","map":{"version":3,"names":["React","Slotm","ppp","x","y","z","console","log"],"sources":["E:/reactjs/shyamapp/src/Slotm.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Slotm(ppp) {\r\n  let { x, y, z } = ppp;\r\n  console.log(x, y, x);\r\n\r\n  if (x === y && y === z) {\r\n    return (\r\n      <>\r\n        <h1>Matchine</h1>\r\n\r\n        <div>\r\n          {x} {y} {z}\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h1>Not Matchine</h1>\r\n\r\n        <div>\r\n          {x} {y} {z}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slotm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,KAAK,CAACC,GAAG,EAAE;EAClB,IAAI;IAAEC,CAAC;IAAEC,CAAC;IAAEC;EAAE,CAAC,GAAGH,GAAG;EACrBI,OAAO,CAACC,GAAG,CAACJ,CAAC,EAAEC,CAAC,EAAED,CAAC,CAAC;EAEpB,IAAIA,CAAC,KAAKC,CAAC,IAAIA,CAAC,KAAKC,CAAC,EAAE;IACtB,oBACE;MAAA,wBACE;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eAEjB;QAAA,WACGF,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACN;IAAA,gBACL;EAEP,CAAC,MAAM;IACL,oBACE;MAAA,wBACE;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eAErB;QAAA,WACGF,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACN;IAAA,gBACL;EAEP;AACF;AAAC,KAzBQJ,KAAK;AA2Bd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}