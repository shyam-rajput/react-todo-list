{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// How to Handling Complex Multiple Input Form States in React:\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [newName, updateName] = useState();\n  const [fullName, setFullName] = useState();\n  const [lastName, setLastName] = useState();\n  const [lastNameNew, setLastNameNew] = useState();\n  const inputName = event => {\n    updateName(event.target.value);\n  };\n  const inputNameTwo = event => {\n    setLastName(event.target.value);\n  };\n  const onSubmits = event => {\n    event.preventDefault(); // page reffrece na ho isliye is method ka use kiya hai, event ek object hai jo jab bhi event trigger hota hao to hame milta hai.\n    setFullName(newName);\n    setLastNameNew(lastName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmits,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Hello \", fullName, \" \", lastNameNew]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Your First Name\",\n            onChange: inputName,\n            value: newName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Your Last Name\",\n            onChange: inputNameTwo,\n            value: lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Click Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"vU+NGQnP26xOczirI4/eyjptiW8=\");\n_c = App;\nexport default App;\n\n// Jab bhi ham Input field par kaam kar rahe hai to iska matlab hai ki ham kaam kar rahe hai Controlled Component par, its means hamare jo input elemnet hai usko yeh <form> Controlled nahi kar raha balki hamara React component Input field controlled kar raha hai.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","newName","updateName","fullName","setFullName","lastName","setLastName","lastNameNew","setLastNameNew","inputName","event","target","value","inputNameTwo","onSubmits","preventDefault"],"sources":["E:/reactjs/shyamapp/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// How to Handling Complex Multiple Input Form States in React:\r\n\r\nconst App = () => {\r\n  const [newName, updateName] = useState();\r\n\r\n  const [fullName, setFullName] = useState();\r\n\r\n  const [lastName, setLastName] = useState();\r\n\r\n  const [lastNameNew, setLastNameNew] = useState();\r\n\r\n  const inputName = (event) => {\r\n    updateName(event.target.value);\r\n  };\r\n\r\n  const inputNameTwo = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n\r\n  const onSubmits = (event) => {\r\n    event.preventDefault(); // page reffrece na ho isliye is method ka use kiya hai, event ek object hai jo jab bhi event trigger hota hao to hame milta hai.\r\n    setFullName(newName);\r\n    setLastNameNew(lastName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={onSubmits}>\r\n          <div>\r\n            <h1>\r\n              Hello {fullName} {lastNameNew}\r\n            </h1>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Your First Name\"\r\n              onChange={inputName}\r\n              value={newName}\r\n            ></input>\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Your Last Name\"\r\n              onChange={inputNameTwo}\r\n              value={lastName}\r\n            ></input>\r\n            <br />\r\n            <br />\r\n            <button type=\"submit\">Click Me</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// Jab bhi ham Input field par kaam kar rahe hai to iska matlab hai ki ham kaam kar rahe hai Controlled Component par, its means hamare jo input elemnet hai usko yeh <form> Controlled nahi kar raha balki hamara React component Input field controlled kar raha hai.\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,EAAE;EAExC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,EAAE;EAE1C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,EAAE;EAE1C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,EAAE;EAEhD,MAAMU,SAAS,GAAIC,KAAK,IAAK;IAC3BR,UAAU,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BJ,WAAW,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAME,SAAS,GAAIJ,KAAK,IAAK;IAC3BA,KAAK,CAACK,cAAc,EAAE,CAAC,CAAC;IACxBX,WAAW,CAACH,OAAO,CAAC;IACpBO,cAAc,CAACH,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,uBACE;QAAM,QAAQ,EAAES,SAAU;QAAA,uBACxB;UAAA,wBACE;YAAA,WAAI,QACI,EAACX,QAAQ,EAAC,GAAC,EAACI,WAAW;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1B,eACL;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,uBAAuB;YACnC,QAAQ,EAAEE,SAAU;YACpB,KAAK,EAAER;UAAQ;YAAA;YAAA;YAAA;UAAA,QACR,eACT;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,sBAAsB;YAClC,QAAQ,EAAEY,YAAa;YACvB,KAAK,EAAER;UAAS;YAAA;YAAA;YAAA;UAAA,QACT,eACT;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YAAQ,IAAI,EAAC,QAAQ;YAAA,UAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACnC;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACH,iBACL;AAEP,CAAC;AAAC,GArDIL,GAAG;AAAA,KAAHA,GAAG;AAuDT,eAAeA,GAAG;;AAElB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}