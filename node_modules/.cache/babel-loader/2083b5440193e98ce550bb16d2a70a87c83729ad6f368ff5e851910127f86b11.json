{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\User.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    fname\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello \", fname, \" Right\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_s(User, \"mYG4Jrjwe8Q6Yl8vHJ7mkkgcWpo=\", false, function () {\n  return [useParams];\n});\n_c = User;\nexport default User;\n\n// 'userParems' returns an object of key/value pairs of URL parameters. Use it to access match.params of the current <Route>.\n\n// http://localhost:3000/user , agar is url me user ke baad hame kuch name add karna hai or us name ko user page par show karana hai dynamically tab is situition me ham useParams Hook ka use karte hai.\n\n// First we need to import userParams hook\n\n// useNavigate Hook in React Router:\n\n// Navigate karane ke liye hamne useNavigate hook ka use kiya hai.\n\nconst About = () => {\n  _s2();\n  const navigate = useNavigate(); // ab useNavigate() ke jitne bhi method or properties thi bho navigate variable me aa chuka hai.\n\n  const goToContact = () => {\n    navigate('/contact'); // esa karne se jab koi button par click karega then bho contact page (Component) par redirect ho jaayega.\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MY About Pge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => goToContact(),\n      children: \"Go to Contact Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(About, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", true);\n_c2 = About;\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"About\");","map":{"version":3,"names":["React","useParams","User","fname","About","navigate","useNavigate","goToContact"],"sources":["E:/reactjs/shyamapp/src/User.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst User = () => {\r\n  const { fname } = useParams();\r\n  return <h1>Hello {fname} Right</h1>;\r\n};\r\n\r\nexport default User;\r\n\r\n// 'userParems' returns an object of key/value pairs of URL parameters. Use it to access match.params of the current <Route>.\r\n\r\n// http://localhost:3000/user , agar is url me user ke baad hame kuch name add karna hai or us name ko user page par show karana hai dynamically tab is situition me ham useParams Hook ka use karte hai.\r\n\r\n// First we need to import userParams hook\r\n\r\n// useNavigate Hook in React Router:\r\n\r\n// Navigate karane ke liye hamne useNavigate hook ka use kiya hai.\r\n\r\nconst About = () => {\r\n  const navigate = useNavigate(); // ab useNavigate() ke jitne bhi method or properties thi bho navigate variable me aa chuka hai.\r\n\r\n  const goToContact = () => {\r\n    navigate('/contact'); // esa karne se jab koi button par click karega then bho contact page (Component) par redirect ho jaayega.\r\n  };\r\n  return (\r\n    <>\r\n      <h1>MY About Pge</h1>\r\n      <button onClick={() => goToContact()}>Go to Contact Page</button>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAAA;AAE7C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM;IAAEC;EAAM,CAAC,GAAGF,SAAS,EAAE;EAC7B,oBAAO;IAAA,WAAI,QAAM,EAACE,KAAK,EAAC,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AACrC,CAAC;AAAC,GAHID,IAAI;EAAA,QACUD,SAAS;AAAA;AAAA,KADvBC,IAAI;AAKV,eAAeA,IAAI;;AAEnB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,MAAME,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,QAAQ,GAAGC,WAAW,EAAE,CAAC,CAAC;;EAEhC,MAAMC,WAAW,GAAG,MAAM;IACxBF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;;EACD,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAQ,OAAO,EAAE,MAAME,WAAW,EAAG;MAAA,UAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAChE;AAEP,CAAC;AAAC,IAZIH,KAAK;AAAA,MAALA,KAAK;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}