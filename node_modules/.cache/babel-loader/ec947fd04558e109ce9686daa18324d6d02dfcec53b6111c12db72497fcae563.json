{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputList, setInputList] = useState('');\n  const [Items, setItems] = useState([]);\n  // Ab hame ek array chaiye jo apni state (value) ko change kar raha hai isleye hamne second useState Hook ka use kiya hai.\n  // iska matlab hai Items ke ander jo current data hai bho hai ek empty array, matlab Items ab ek array ban chuka hai.\n\n  const itemEvent = e => {\n    setInputList(e.target.value);\n  };\n  const listofItems = () => {\n    setItems(inputList); // useState([]) iske pass jo bhi data hai isko setItems access kar sakta hai is tarike se callback function me parameter pass karke, ab is parameter me jo empty array hai uska acces a gaya.\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a Items\",\n          onChange: itemEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listofItems,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: Items.map(itemval => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"itemval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"rkRLrwVnMEEbSGnM8Q6fdlfQOg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","inputList","setInputList","Items","setItems","itemEvent","e","target","value","listofItems","map","itemval"],"sources":["E:/reactjs/shyamapp/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n  const [inputList, setInputList] = useState('');\r\n  const [Items, setItems] = useState([]);\r\n  // Ab hame ek array chaiye jo apni state (value) ko change kar raha hai isleye hamne second useState Hook ka use kiya hai.\r\n  // iska matlab hai Items ke ander jo current data hai bho hai ek empty array, matlab Items ab ek array ban chuka hai.\r\n\r\n  const itemEvent = (e) => {\r\n    setInputList(e.target.value);\r\n  };\r\n\r\n  const listofItems = () => {\r\n    setItems(inputList); // useState([]) iske pass jo bhi data hai isko setItems access kar sakta hai is tarike se callback function me parameter pass karke, ab is parameter me jo empty array hai uska acces a gaya.\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main_div\">\r\n        <div className=\"center_div\">\r\n          <br />\r\n          <h1>ToDo List</h1>\r\n          <br />\r\n          <input type=\"text\" placeholder=\"Add a Items\" onChange={itemEvent} />\r\n          <button onClick={listofItems}> + </button>\r\n\r\n          <ol>\r\n            {Items.map((itemval) => {\r\n              return <li>itemval</li>;\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;;EAEA,MAAMM,SAAS,GAAIC,CAAC,IAAK;IACvBJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,WAAW,GAAG,MAAM;IACxBL,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,aAAa;UAAC,QAAQ,EAAEI;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eACpE;UAAQ,OAAO,EAAEI,WAAY;UAAA,UAAC;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS,eAE1C;UAAA,UACGN,KAAK,CAACO,GAAG,CAAEC,OAAO,IAAK;YACtB,oBAAO;cAAA,UAAI;YAAO;cAAA;cAAA;cAAA;YAAA,QAAK;UACzB,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACC;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP,CAAC;AAAC,GAjCIX,GAAG;AAAA,KAAHA,GAAG;AAmCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}