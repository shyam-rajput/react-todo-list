{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\CreateNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNote = props => {\n  _s();\n  const [expand, setExpand] = useState(false);\n  const [note, setNote] = useState({\n    title: '',\n    content: ''\n  });\n  const InputEvent = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    // const {name, value} = e.target // esa bhi kar sakte the with Object distructing\n    setNote(prevData => {\n      return {\n        ...prevData,\n        [name]: value // [name] isme ya to title hoga ya content, agar title hua to preData object me title properties se match ho jaayega or usme value pass kar denge jo typeki hai, same in case of content.\n      };\n    });\n  };\n\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: '',\n      content: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand ?\n        /*#__PURE__*/\n        // ternary operator use kiya hai if expand is true then show input field otherwise not show\n        _jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          autoComplete: \"off\",\n          value: note.title,\n          name: \"title\",\n          onChange: InputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"\",\n          column: \"\",\n          value: note.content,\n          name: \"content\",\n          onChange: InputEvent,\n          placeholder: \"Write a note...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus-sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNote, \"41nIdI/usS+G8rTUMvvMKaCV+pw=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","Button","AddIcon","CreateNote","props","expand","setExpand","note","setNote","title","content","InputEvent","e","value","target","name","prevData","addEvent","passNote"],"sources":["E:/reactjs/shyamapp/src/CreateNote.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst CreateNote = (props) => {\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  const [note, setNote] = useState({\r\n    title: '',\r\n    content: '',\r\n  });\r\n\r\n  const InputEvent = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    // const {name, value} = e.target // esa bhi kar sakte the with Object distructing\r\n    setNote((prevData) => {\r\n      return {\r\n        ...prevData,\r\n        [name]: value, // [name] isme ya to title hoga ya content, agar title hua to preData object me title properties se match ho jaayega or usme value pass kar denge jo typeki hai, same in case of content.\r\n      };\r\n    });\r\n  };\r\n\r\n  const addEvent = () => {\r\n    props.passNote(note);\r\n    setNote({\r\n      title: '',\r\n      content: '',\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <form>\r\n          {expand ? ( // ternary operator use kiya hai if expand is true then show input field otherwise not show\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              autoComplete=\"off\"\r\n              value={note.title}\r\n              name=\"title\"\r\n              onChange={InputEvent}\r\n            />\r\n          ) : null}\r\n          <textarea\r\n            rows=\"\"\r\n            column=\"\"\r\n            value={note.content}\r\n            name=\"content\"\r\n            onChange={InputEvent}\r\n            placeholder=\"Write a note...\"\r\n          ></textarea>\r\n          <Button onClick={addEvent}>\r\n            <AddIcon className=\"plus-sign\" />\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAAA;AAC7C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B,MAAME,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACC,IAAI;;IAE1B;IACAP,OAAO,CAAEQ,QAAQ,IAAK;MACpB,OAAO;QACL,GAAGA,QAAQ;QACX,CAACD,IAAI,GAAGF,KAAK,CAAE;MACjB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED,MAAMI,QAAQ,GAAG,MAAM;IACrBb,KAAK,CAACc,QAAQ,CAACX,IAAI,CAAC;IACpBC,OAAO,CAAC;MACNC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EACD,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB;QAAA,WACGL,MAAM;QAAA;QAAK;QACV;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,OAAO;UACnB,YAAY,EAAC,KAAK;UAClB,KAAK,EAAEE,IAAI,CAACE,KAAM;UAClB,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAEE;QAAW;UAAA;UAAA;UAAA;QAAA,QACrB,GACA,IAAI,eACR;UACE,IAAI,EAAC,EAAE;UACP,MAAM,EAAC,EAAE;UACT,KAAK,EAAEJ,IAAI,CAACG,OAAQ;UACpB,IAAI,EAAC,SAAS;UACd,QAAQ,EAAEC,UAAW;UACrB,WAAW,EAAC;QAAiB;UAAA;UAAA;UAAA;QAAA,QACnB,eACZ,QAAC,MAAM;UAAC,OAAO,EAAEM,QAAS;UAAA,uBACxB,QAAC,OAAO;YAAC,SAAS,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC1B;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACH,iBACL;AAEP,CAAC;AAAC,GAzDId,UAAU;AAAA,KAAVA,UAAU;AA2DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}