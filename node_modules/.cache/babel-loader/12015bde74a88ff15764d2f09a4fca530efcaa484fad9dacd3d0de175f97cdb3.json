{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const state = useState(); // state ki 2 value ha i array me [undefined, function]\n  // console.log(state);\n\n  const [count, setCount] = useState(5); // Array Distructing ka use kiya hai, ham useState() ke nader koi bhi value pass kar sakte hai. useState ki array me jo 2 values hai undefined and function bhi count and setCount me a jaayegi.\n\n  // Yaha initial value 5 hai jo count variable me chali jaayegi. Here count is a current value\n\n  // Ab setCount ek function hai and isme aap jo bhi value pass kroge bho hogi updated value. And, ab ye jo 'setCount' function ki Updated Value hai bho 'count' ke liye ho jaayegi Current Vlaue.\n\n  const IncCum = () => {\n    setCount(100); // ab ye 100, count ke liye current value ho jaayegi.\n    // setCount(count + 5);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: IncCum,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"RU4oC+2CZjYVl9S2fQ05FVNBvH8=\");\n_c = App;\nexport default App;\n\n// Hamne onclick ko onClick lika hai kyuki React me ham camal notation ka use karte hai, and hamne onClick={InCum} ke ander inCum me parasysis () nahi diye hai jabki ham jabki ham JavaScript me paralysis dete hai lekin React me nahi.\n\n// Ab button par click karne par 100 value a jaayegi. Yahi hai state management, ham yaha ek variable ka state change kar paa rahe hai useState() ki help se and isi useState() ko ham Hooks kehte hai.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","state","count","setCount","IncCum"],"sources":["E:/reactjs/shyamapp/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n  const state = useState(); // state ki 2 value ha i array me [undefined, function]\r\n  // console.log(state);\r\n\r\n  const [count, setCount] = useState(5); // Array Distructing ka use kiya hai, ham useState() ke nader koi bhi value pass kar sakte hai. useState ki array me jo 2 values hai undefined and function bhi count and setCount me a jaayegi.\r\n\r\n  // Yaha initial value 5 hai jo count variable me chali jaayegi. Here count is a current value\r\n\r\n  // Ab setCount ek function hai and isme aap jo bhi value pass kroge bho hogi updated value. And, ab ye jo 'setCount' function ki Updated Value hai bho 'count' ke liye ho jaayegi Current Vlaue.\r\n\r\n  const IncCum = () => {\r\n    setCount(100); // ab ye 100, count ke liye current value ho jaayegi.\r\n    // setCount(count + 5);\r\n  };\r\n  return (\r\n    <>\r\n      <h1>{count}</h1>\r\n      <button onClick={IncCum}>Click Me</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// Hamne onclick ko onClick lika hai kyuki React me ham camal notation ka use karte hai, and hamne onClick={InCum} ke ander inCum me parasysis () nahi diye hai jabki ham jabki ham JavaScript me paralysis dete hai lekin React me nahi.\r\n\r\n// Ab button par click karne par 100 value a jaayegi. Yahi hai state management, ham yaha ek variable ka state change kar paa rahe hai useState() ki help se and isi useState() ko ham Hooks kehte hai.\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,KAAK,GAAGF,QAAQ,EAAE,CAAC,CAAC;EAC1B;;EAEA,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvC;;EAEA;;EAEA,MAAMK,MAAM,GAAG,MAAM;IACnBD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACf;EACF,CAAC;;EACD,oBACE;IAAA,wBACE;MAAA,UAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAQ,OAAO,EAAEE,MAAO;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACzC;AAEP,CAAC;AAAC,GApBIJ,GAAG;AAAA,KAAHA,GAAG;AAsBT,eAAeA,GAAG;;AAElB;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}