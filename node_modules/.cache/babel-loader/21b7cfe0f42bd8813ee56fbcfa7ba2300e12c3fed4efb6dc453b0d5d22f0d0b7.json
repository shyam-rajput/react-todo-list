{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\Slotm.jsx\";\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slotm = props => {\n  //   let x = props.x\n  //   let y = props.y\n  //   let z = props.z\n\n  let {\n    x,\n    y,\n    z\n  } = props; // by using Object Distructing\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, y, z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is Matching.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, y, z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is Not Matching.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n_c = Slotm;\nexport default Slotm;\nvar _c;\n$RefreshReg$(_c, \"Slotm\");","map":{"version":3,"names":["React","Slotm","props","x","y","z"],"sources":["E:/reactjs/shyamapp/src/Slotm.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Slotm = (props) => {\r\n  //   let x = props.x\r\n  //   let y = props.y\r\n  //   let z = props.z\r\n\r\n  let { x, y, z } = props // by using Object Distructing\r\n\r\n  if (x === y && y === z) {\r\n    return (\r\n      <>\r\n        <div className=\"slot_inner\"></div>\r\n\r\n        <h1>\r\n          {x}\r\n          {y}\r\n          {z}\r\n        </h1>\r\n        <h1>This is Matching.</h1>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"slot_inner\"></div>\r\n\r\n        <h1>\r\n          {x}\r\n          {y}\r\n          {z}\r\n        </h1>\r\n        <h1>This is Not Matching.</h1>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Slotm\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB;EACA;EACA;;EAEA,IAAI;IAAEC,CAAC;IAAEC,CAAC;IAAEC;EAAE,CAAC,GAAGH,KAAK,EAAC;;EAExB,IAAIC,CAAC,KAAKC,CAAC,IAAIA,CAAC,KAAKC,CAAC,EAAE;IACtB,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAO,eAElC;QAAA,WACGF,CAAC,EACDC,CAAC,EACDC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACC,eACL;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,gBACzB;EAEP,CAAC,MAAM;IACL,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAO,eAElC;QAAA,WACGF,CAAC,EACDC,CAAC,EACDC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACC,eACL;QAAA,UAAI;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,gBAC7B;EAEP;AACF,CAAC;AAAA,KAlCKJ,KAAK;AAoCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}