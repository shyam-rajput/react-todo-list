{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\useEffectAPI.js\",\n  _s = $RefreshSig$();\n// Get Github Users Data using useEffect Hook with Fetch API:\n\n// Call API through React:\n\nimport React, { useEffect, useState } from 'react';\nimport Loading from './Loading';\nimport GitHubUsers from './gitHubUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseEffectAPI = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getUsers = async () => {\n    try {\n      const response = await fetch('https://api.github.com/users');\n      setLoading(false);\n      setUsers(await response.json());\n    } catch (error) {\n      setLoading(false);\n      console.log('My erroe is' + error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GitHubUsers, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UseEffectAPI, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = UseEffectAPI;\nexport default UseEffectAPI;\n\n// if loading ki value true hue then <loading component load ho jaayega or agar loading ki value false hue to <GitHubUsers /> component call ho jaayega.\nvar _c;\n$RefreshReg$(_c, \"UseEffectAPI\");","map":{"version":3,"names":["React","useEffect","useState","Loading","GitHubUsers","UseEffectAPI","users","setUsers","loading","setLoading","getUsers","response","fetch","json","error","console","log"],"sources":["E:/reactjs/shyamapp/src/useEffectAPI.js"],"sourcesContent":["// Get Github Users Data using useEffect Hook with Fetch API:\r\n\r\n// Call API through React:\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Loading from './Loading';\r\nimport GitHubUsers from './gitHubUsers';\r\n\r\nconst UseEffectAPI = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await fetch('https://api.github.com/users');\r\n      setLoading(false);\r\n      setUsers(await response.json());\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log('My erroe is' + error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GitHubUsers users={users} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseEffectAPI;\r\n\r\n// if loading ki value true hue then <loading component load ho jaayega or agar loading ki value false hue to <GitHubUsers /> component call ho jaayega.\r\n"],"mappings":";;AAAA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AAExC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMQ,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5DH,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAAC,MAAMI,QAAQ,CAACE,IAAI,EAAE,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,UAAU,CAAC,KAAK,CAAC;MACjBM,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,KAAK,CAAC;IACpC;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdS,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EACpB;EAEA,oBACE;IAAA,uBACE,QAAC,WAAW;MAAC,KAAK,EAAEF;IAAM;MAAA;MAAA;MAAA;IAAA;EAAG,iBAC5B;AAEP,CAAC;AAAC,GA5BID,YAAY;AAAA,KAAZA,YAAY;AA8BlB,eAAeA,YAAY;;AAE3B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}